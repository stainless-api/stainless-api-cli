project_name: stl
version: 2

before:
  hooks:
    - mkdir -p completions
    - sh -c "go run ./cmd/stl/main.go @completion bash > completions/stl.bash"
    - sh -c "go run ./cmd/stl/main.go @completion zsh > completions/stl.zsh"
    - sh -c "go run ./cmd/stl/main.go @completion fish > completions/stl.fish"
    - sh -c "go run ./cmd/stl/main.go @manpages -o man"

builds:
  - id: macos
    goos: [darwin]
    goarch: [amd64, arm64]
    binary: '{{ .ProjectName }}'
    main: ./cmd/stl/main.go
    mod_timestamp: '{{ .CommitTimestamp }}'
    ldflags:
      - '-s -w -X main.version={{.Version}} -X main.commit={{.Commit}}'

  - id: linux
    goos: [linux]
    goarch: ['386', arm, amd64, arm64]
    env:
      - CGO_ENABLED=0
    binary: '{{ .ProjectName }}'
    main: ./cmd/stl/main.go
    mod_timestamp: '{{ .CommitTimestamp }}'
    ldflags:
      - '-s -w -X main.version={{.Version}} -X main.commit={{.Commit}}'

  - id: windows
    goos: [windows]
    goarch: ['386', amd64, arm64]
    binary: '{{ .ProjectName }}'
    main: ./cmd/stl/main.go
    mod_timestamp: '{{ .CommitTimestamp }}'
    ldflags:
      - '-s -w -X main.version={{.Version}} -X main.commit={{.Commit}}'

archives:
  - id: linux-archive
    ids: [linux]
    name_template: '{{ .ProjectName }}_{{ .Version }}_linux_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}'
    wrap_in_directory: true
    formats: [tar.gz]
    files:
      - completions/*
  - id: macos-archive
    ids: [macos]
    name_template: '{{ .ProjectName }}_{{ .Version }}_macos_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}'
    wrap_in_directory: true
    formats: [zip]
    files:
      - completions/*
  - id: windows-archive
    ids: [windows]
    name_template: '{{ .ProjectName }}_{{ .Version }}_windows_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}'
    wrap_in_directory: false
    formats: [zip]
    files:
      - completions/*

snapshot:
  version_template: '{{ .Tag }}-next'

nfpms:
  - license: Apache-2.0
    maintainer: local-dev@stainless.com
    bindir: /usr
    formats:
      - apk
      - deb
      - rpm
      - termux.deb
      - archlinux
    contents:
      - src: man/man1/*.1.gz
        dst: /usr/share/man/man1/
homebrew_casks:
  - name: stl
    repository:
      owner: stainless-api
      name: homebrew-tap
      token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"
    homepage: https://stainless.com
    description: The official CLI for stainless.
    license: Apache-2.0
    binary: "stl"
    completions:
      bash: "completions/stl.bash"
      zsh: "completions/stl.zsh"
      fish: "completions/stl.fish"
    manpages:
    - man/man1/stl.1.gz

notarize:
  macos:
    - enabled: '{{ isEnvSet "MACOS_SIGN_P12" }}'
      ids: [macos]

      sign:
        certificate: "{{.Env.MACOS_SIGN_P12}}"
        password: "{{.Env.MACOS_SIGN_PASSWORD}}"

      notarize:
        issuer_id: "{{.Env.MACOS_NOTARY_ISSUER_ID}}"
        key_id: "{{.Env.MACOS_NOTARY_KEY_ID}}"
        key: "{{.Env.MACOS_NOTARY_KEY}}"
